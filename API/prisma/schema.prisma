// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  nome    String
  foto    String 
  unidade_de_medida String
  marca   String
  tratamento String
  valor Float
  Stock Stock[]
  Sale Sale[]
}
model User {
  id String   @id @default(auto()) @map("_id") @db.ObjectId
  nome String 
  cpf String?
  email String
  celular String
  uf  String
  rua String
  cep String
  usuario String
  senha String
  nivel_acesso Int
  Order Order[]
}
model Stock {
  id String   @id @default(auto()) @map("_id") @db.ObjectId
  produto   Product   @relation(fields: [produto_Id], references: [id])
  produto_Id String @db.ObjectId 
  quantidade Int
}
model Payment{
  id String   @id @default(auto()) @map("_id") @db.ObjectId
  tipo String
  status Int
  Order Order[]
}
model Order{
  id String   @id @default(auto()) @map("_id") @db.ObjectId
  usuario  User   @relation(fields: [usuario_Id], references: [id])
  usuario_Id String @db.ObjectId
  pagamento  Payment   @relation(fields: [pagamento_Id], references: [id])
  pagamento_Id String @db.ObjectId 
  status Int
  valor_total Float
  Sale Sale[]
}
model Sale{
  id String   @id @default(auto()) @map("_id") @db.ObjectId
  produto  Product   @relation(fields: [produto_Id], references: [id])
  produto_Id String @db.ObjectId
  pedido  Order   @relation(fields: [pedido_Id], references: [id])
  pedido_Id String @db.ObjectId
  quantidade Int
  subtotal Float
}

